# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type State {
  isoAlphaCode2: CountryCode!
  name: String!
}

"""A country code as defined by ISO 3166-1 alpha-2"""
scalar CountryCode

type BarTypeCategory {
  id: ID!
  name: String!
  barTypes: [BarType!]!
}

type BarType {
  id: ID!
  name: String!
  bars: [Bar!]!
  category: BarTypeCategory!
}

type Franchise {
  id: ID!
  name: String!
  bars: [Bar!]!
}

type Bar {
  id: ID!
  averageBillSum: PositiveFloat
  name: String!
  description: String!
  types: [BarType!]!
  franchise: Franchise!
  outlets: [BarOutlet!]!
  logoUrl: String
}

"""Floats that will have a value greater than 0."""
scalar PositiveFloat

type Photo {
  id: ID!
  url: String!
  outlet: BarOutlet!
}

type BarOutlet {
  id: ID!
  photos: [Photo!]!
  phoneNumber: PhoneNumber!
  address: Address!
  bar: Bar!
  description: String!
}

"""
A field whose value conforms to the standard E.164 format as specified in: https://en.wikipedia.org/wiki/E.164. Basically this is +17895551234.
"""
scalar PhoneNumber

type Point {
  coordinates: [Float!]!
}

type Address {
  id: ID!
  location: Point!
  street: String!
  city: String!
  state: State!
  barOutlets: [BarOutlet!]!
}

type PaginatedBarDto {
  data: [Bar!]!
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  itemCount: Int!
  page: Int!
  pageCount: Int!
  pageSize: Int!
}

type Query {
  bars(order: Order! = ASC, page: Int! = 1, pageSize: Int! = 10): PaginatedBarDto!
  bar(id: ID!): Bar!
  outlets: [BarOutlet!]!
  outlet(id: ID!): BarOutlet!
}

enum Order {
  ASC
  DESC
}